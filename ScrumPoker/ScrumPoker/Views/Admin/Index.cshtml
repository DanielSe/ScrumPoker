@model ScrumPoker.Models.Room

<div class="container">
    <h1>Admin for @Model.Name</h1>
    <p>@Model.Description</p>

    <ul>
        <li>@Html.ActionLink("Show dashboard", "Dashboard", "Client", new { id = @Model.RoomId }, new { target = "_blank"})</li>
        <li>@Html.ActionLink("Show client", "Index", "Client", new { roomId = @Model.RoomId }, new { target = "_blank"})</li>
    </ul>
    
    <div>
        <h2>Participants</h2>
        <ul data-bind="foreach: participants">
            <li>
                <span data-bind="text: participantId"></span>
                <span data-bind="text: name"></span>
                <span data-bind="text: email"></span>
                <span></span>
                <a href="#" data-bind="click: kick">Kick</a>
            </li>
        </ul>

        <!-- ko if: participants().length == 0 -->
        <p>No participants</p>
        <!-- /ko -->
    </div>
    
    <h2>Issues</h2>
    <ul>
        @if (Model.Issues.Any())
        {
            foreach (var issue in Model.Issues)
            {
                <li>@issue.Name - @issue.Description - @Html.ActionLink("Set current", "SetIssue", new {issueId = @issue.IssueId})</li>
            }
        }
        else
        {
            <li>No issues</li>
        }
    </ul>
    @if (Model.CurrentIssue != null)
    {
        <p>Current issue: @Model.CurrentIssue.Name @Model.CurrentIssue.Description</p>
    }
    else
    {
        <p>There is no current issue.</p>
    }
    <p>
        @Html.ActionLink("Create issue", "CreateIssue")
    </p>
</div>

@section scripts
{
    <script>
        $(function () {
            var roomAdminController = new RoomAdminController();
            roomAdminController.roomAdminId("@Model.RoomAdminId");
            roomAdminController.roomId("@Model.RoomId");
            
            var hub = $.connection.roomHub;

            hub.client.participantJoins = function (participant) {
                roomAdminController.addParticipant(new Participant(participant));
            };

            hub.client.participantLeaves = function (participantId) {
                roomAdminController.removeParticipant(participantId);
            };

            hub.client.initRoom = function(initData) {
                initData.participants.forEach(function(item) {
                    roomAdminController.addParticipant(new Participant(item));
                });
            };
            
            $.connection.hub.start().done(function() {
                var test = hub.server.joinRoom("@Model.RoomId", "PID");

                $(window).unload(function () {
                    hub.server.leaveRoom("@Model.RoomId", "PID");
                });
            });

            ko.applyBindings(roomAdminController);
            window.dsec = roomAdminController;
        });
    </script>
}
